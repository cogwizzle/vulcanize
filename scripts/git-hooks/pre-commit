#!/bin/bash
#! Hook that will increment the version of package.ini.
#! Versions have a major, minor and patch version assocaited with them.
#! Each commit should ask the user if they want to increment the major, minor or patch version.

# Increment the major version.
# $1 - The version.
# Returns the new version.
# Example: increment_major "1.2.3" -> "2.0.0"
function increment_major() {
    local version
    version=$1
    local major
    major=$(echo "$version" | awk -F '.' '{print $1}')
    local new_major
    new_major=$((major + 1))
    echo "$new_major.0.0"
}

# Increment the minor version.
# $1 - The version.
# Returns the new version.
# Example: increment_minor "1.2.3" -> "1.3.0"
function increment_minor() {
    local version
    version=$1
    local minor
    minor=$(echo "$version" | awk -F '.' '{print $2}')
    local new_minor
    new_minor=$((minor + 1))
    echo "$(echo "$version" | awk -F '.' '{print $1}').$new_minor.0"
}

# Increment the patch version.
# $1 - The version.
# Returns the new version.
# Example: increment_patch "1.2.3" -> "1.2.4"
function increment_patch() {
    local version
    version=$1
    local patch
    patch=$(echo "$version" | awk -F '.' '{print $3}')
    local new_patch
    new_patch=$((patch + 1))
    echo "$(echo "$version" | awk -F '.' '{print $1}').$(echo "$version" | awk -F '.' '{print $2}').$new_patch"
}

# Main function.
function run() {
    # Get the version from package.ini.
    local version
    version=$(grep "version" package.ini | awk -F '=' '{print $2}')
    echo "Current version: $version"
    # Ask the user if they want to increment the major, minor or patch version.
    local increment
    read -p "Do you want to increment the major, minor or patch version? " increment
    local new_version
    if [ "$increment" == "major" ]; then
        new_version=$(increment_major "$version")
    elif [ "$increment" == "minor" ]; then
        new_version=$(increment_minor "$version")
    elif [ "$increment" == "patch" ]; then
        new_version=$(increment_patch "$version")
    else
        echo "Invalid increment"
        exit 1
    fi
    # Replace the version in package.ini.
    gsed -i "s/version=$version/version=$new_version/" package.ini
}

run
